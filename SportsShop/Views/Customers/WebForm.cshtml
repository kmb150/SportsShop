@model FormCollection
@{
    ViewBag.Title = "WebForm";
}

<h2>WebForm</h2>
@if (!IsPost)
{
    using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model["FirstName"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model["FirstName"], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model["FirstName"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model["LastName"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model["LastName"], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model["LastName"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model["Email"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model["Email"], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model["Email"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model["Age"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model["Age"], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model["Age"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model["FullAddress"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model["FullAddress"], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model["FullAddress"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model["DateOfBirth"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model["DateOfBirth"], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model["DateOfBirth"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Display" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
}
else
{
    <ul>
        @{ 
            
            for(int i = 1; i < Model.Keys.Count; i++)
            {
                <li>
                    @Model.Keys[i].Substring(1, Model.Keys[i].Length-2) : 
                    @Model[Model.Keys[i]]

                </li>
            }
        }

    </ul>
}

